{"version":3,"sources":["webpack:///./src/components/report/Reports.vue?7690","webpack:///src/components/report/Reports.vue","webpack:///./src/components/report/Reports.vue?79ca","webpack:///./src/components/report/Reports.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","path","_v","staticStyle","staticRenderFns","data","chartData","option","title","text","tooltip","trigger","axisPointer","type","label","backgroundColor","legend","toolbox","feature","saveAsImage","grid","left","right","bottom","containLabel","xAxis","yAxis","series","created","getData","mounted","myChart","setOption","methods","component"],"mappings":"yHAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACA,EAAG,gBAAgB,CAACE,MAAM,CAAC,kBAAkB,wBAAwB,CAACF,EAAG,qBAAqB,CAACE,MAAM,CAAC,GAAK,CAAEC,KAAM,WAAY,CAACP,EAAIQ,GAAG,QAAQJ,EAAG,qBAAqB,CAACJ,EAAIQ,GAAG,UAAUJ,EAAG,qBAAqB,CAACJ,EAAIQ,GAAG,WAAW,GAAGJ,EAAG,UAAU,CAACA,EAAG,MAAM,CAACK,YAAY,CAAC,MAAQ,QAAQ,OAAS,SAASH,MAAM,CAAC,GAAK,aAAa,IAC7aI,EAAkB,G,6CCetB,GACEC,KADF,WAEI,MAAO,CACLC,UAAW,GACXC,OAAQ,CACNC,MAAO,CACLC,KAAM,SAERC,QAAS,CACPC,QAAS,OACTC,YAAa,CACXC,KAAM,QACNC,MAAO,CACLC,gBAAiB,aAIvBC,OAAQ,CACNX,KAAM,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,SAEzCY,QAAS,CACPC,QAAS,CACPC,YAAa,KAGjBC,KAAM,CACJC,KAAM,KACNC,MAAO,KACPC,OAAQ,KACRC,cAAc,GAEhBC,MAAO,CACf,CACU,KAAV,WACU,aAAV,EACU,KAAV,uCAGQC,MAAO,CACf,CACU,KAAV,UAGQC,OAAQ,CAChB,CACU,KAAV,OACU,KAAV,OACU,MAAV,KACU,UAAV,GACU,KAAV,8BAEA,CACU,KAAV,OACU,KAAV,OACU,MAAV,KACU,UAAV,GACU,KAAV,+BAEA,CACU,KAAV,OACU,KAAV,OACU,MAAV,KACU,UAAV,GACU,KAAV,+BAEA,CACU,KAAV,OACU,KAAV,OACU,MAAV,KACU,UAAV,GACU,KAAV,+BAEA,CACU,KAAV,OACU,KAAV,OACU,MAAV,KACU,MAAV,CACY,OAAZ,CACc,MAAd,EACc,SAAd,QAGU,UAAV,GACU,KAAV,sCAMEC,QAzFF,WA0FIjC,KAAKkC,WAEPC,QA5FF,WA6FI,IAAJ,4CAgCIC,EAAQC,UAAUrC,KAAKY,SAEzB0B,QAAS,CACP,QADJ,WACA,gLACA,+BADA,mBACA,EADA,EACA,KACA,oBAFA,yCAGA,+BAHA,OAKA,mBALA,gDChJgW,I,YCO5VC,EAAY,eACd,EACAzC,EACAW,GACA,EACA,KACA,WACA,MAIa,aAAA8B,E","file":"js/chunk-2d0cf4d2.e99ab75e.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('el-breadcrumb',{attrs:{\"separator-class\":\"el-icon-arrow-right\"}},[_c('el-breadcrumb-item',{attrs:{\"to\":{ path: '/home' }}},[_vm._v(\"首页\")]),_c('el-breadcrumb-item',[_vm._v(\"数据统计\")]),_c('el-breadcrumb-item',[_vm._v(\"数据报表\")])],1),_c('el-card',[_c('div',{staticStyle:{\"width\":\"600px\",\"height\":\"400px\"},attrs:{\"id\":\"main\"}})])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\r\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\r\n      <el-breadcrumb-item>数据统计</el-breadcrumb-item>\r\n      <el-breadcrumb-item>数据报表</el-breadcrumb-item>\r\n    </el-breadcrumb>\r\n    <el-card>\r\n      <div style=\"width: 600px;height: 400px\" id=\"main\"></div>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport echarts from 'echarts'\r\n// import _ from 'lodash'\r\nexport default {\r\n  data() {\r\n    return {\r\n      chartData: [],\r\n      option: {\r\n        title: {\r\n          text: '堆叠区域图'\r\n        },\r\n        tooltip: {\r\n          trigger: 'axis',\r\n          axisPointer: {\r\n            type: 'cross',\r\n            label: {\r\n              backgroundColor: '#6a7985'\r\n            }\r\n          }\r\n        },\r\n        legend: {\r\n          data: ['邮件营销', '联盟广告', '视频广告', '直接访问', '搜索引擎']\r\n        },\r\n        toolbox: {\r\n          feature: {\r\n            saveAsImage: {}\r\n          }\r\n        },\r\n        grid: {\r\n          left: '3%',\r\n          right: '4%',\r\n          bottom: '3%',\r\n          containLabel: true\r\n        },\r\n        xAxis: [\r\n          {\r\n            type: 'category',\r\n            boundaryGap: false,\r\n            data: ['周一', '周二', '周三', '周四', '周五', '周六', '周日']\r\n          }\r\n        ],\r\n        yAxis: [\r\n          {\r\n            type: 'value'\r\n          }\r\n        ],\r\n        series: [\r\n          {\r\n            name: '邮件营销',\r\n            type: 'line',\r\n            stack: '总量',\r\n            areaStyle: {},\r\n            data: [120, 132, 101, 134, 90, 230, 210]\r\n          },\r\n          {\r\n            name: '联盟广告',\r\n            type: 'line',\r\n            stack: '总量',\r\n            areaStyle: {},\r\n            data: [220, 182, 191, 234, 290, 330, 310]\r\n          },\r\n          {\r\n            name: '视频广告',\r\n            type: 'line',\r\n            stack: '总量',\r\n            areaStyle: {},\r\n            data: [150, 232, 201, 154, 190, 330, 410]\r\n          },\r\n          {\r\n            name: '直接访问',\r\n            type: 'line',\r\n            stack: '总量',\r\n            areaStyle: {},\r\n            data: [320, 332, 301, 334, 390, 330, 320]\r\n          },\r\n          {\r\n            name: '搜索引擎',\r\n            type: 'line',\r\n            stack: '总量',\r\n            label: {\r\n              normal: {\r\n                show: true,\r\n                position: 'top'\r\n              }\r\n            },\r\n            areaStyle: {},\r\n            data: [820, 932, 901, 934, 1290, 1330, 1320]\r\n          }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    this.getData()\r\n  },\r\n  mounted() {\r\n    const myChart = echarts.init(document.getElementById('main'))\r\n    /* const options = {\r\n      title: {\r\n        text: '用户来源'\r\n      },\r\n      tooltip: {\r\n        trigger: 'axis',\r\n        axisPointer: {\r\n          type: 'cross',\r\n          label: {\r\n            backgroundColor: '#E9EEF3'\r\n          }\r\n        }\r\n      },\r\n      grid: {\r\n        left: '3%',\r\n        right: '4%',\r\n        bottom: '3%',\r\n        containLabel: true\r\n      },\r\n      xAxis: [\r\n        {\r\n          boundaryGap: false\r\n        }\r\n      ],\r\n      yAxis: [\r\n        {\r\n          type: 'value'\r\n        }\r\n      ]\r\n    } */\r\n    // const res = _.merge(this.chartData, options)\r\n    myChart.setOption(this.option)\r\n  },\r\n  methods: {\r\n    async getData() {\r\n      const { data: res } = await this.$axios.get('reports/type/1')\r\n      if (res.meta.status !== 200) {\r\n        return this.$message.error('获取报表数据失败!')\r\n      }\r\n      this.chartData = res.data\r\n      console.log(res.data)\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n</style>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Reports.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Reports.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Reports.vue?vue&type=template&id=b654e594&scoped=true&\"\nimport script from \"./Reports.vue?vue&type=script&lang=js&\"\nexport * from \"./Reports.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"b654e594\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}